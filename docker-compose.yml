version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_DB=postgres
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - voxa-network
    restart: unless-stopped

  voxa-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - VOXA_API_KEY=${VOXA_API_KEY}
      - DATABASE_URL=sqlite:///./voxa_api.db
    volumes:
      - ./api_data:/app/data
    ports:
      - "8000:8000"
    networks:
      - voxa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3

  odoo:
    build: 
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - voxa-api
    ports:
      - "8069:8069"
    volumes:
      - ./odoo.conf:/etc/odoo/odoo.conf
      - ./addons:/mnt/extra-addons
      - ./filestore:/var/lib/odoo/filestore
      - ./sessions:/var/lib/odoo/sessions
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo
      - VOXA_LICENSE_API_URL=http://voxa-api:8000/api/license/verify
      - VOXA_LICENSE_API_KEY=${VOXA_LICENSE_API_KEY}
    networks:
      - voxa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8069/web/health"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  voxa-network:
    driver: bridge

volumes:
  postgresql_data:
  filestore_data:
  sessions_data: