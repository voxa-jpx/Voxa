services:
  # Banco de dados PostgreSQL para Odoo
  db:
    image: postgres:15
    container_name: voxa_postgres_odoo
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Usar volume nomeado em vez de bind mount
    ports:
      - "5433:5432"
    networks:
      - voxa_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Odoo (Cliente Voxa)
  odoo:
    build: .
    container_name: voxa_odoo
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8069:8069"
    volumes:
      - ./odoo.conf:/etc/odoo/odoo.conf:ro
      - ./addons:/mnt/extra-addons:ro  # Read-only para evitar problemas de permissão
      - ./.env:/mnt/extra-addons/.env:ro
      - odoo_data:/var/lib/odoo
      - odoo_filestore:/var/lib/odoo/filestore  # Volume separado para filestore
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo
      # Variáveis de ambiente para o módulo de licença
      - VOXA_LICENSE_API_URL=http://voxa-api:8000/api/license/verify
      - VOXA_LICENSE_API_KEY=Bearer V9kEXAMPLEp5xGv4jR9_eXaO4Db-YzMVhwGtBmfSY
    networks:
      - voxa_network
    restart: unless-stopped
    # Para WSL, adicionar estas configurações
    user: "0:0"  # Rodar como root temporariamente
    
networks:
  voxa_network:
    external: true

volumes:
  postgres_data:
    driver: local
  odoo_data:
    driver: local
  odoo_filestore:
    driver: local